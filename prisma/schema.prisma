// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model LoginAdministrator {
  id               Int           @id @default(autoincrement())
  email            String        @unique
  password         String
  emailRecovery    String
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  administrator    Administrator @relation(fields: [adminId], references: [id])
  adminId          Int           @unique
}

model Administrator {
  id                 Int                 @id @default(autoincrement())
  is_master          Boolean             @default(false)
  loginAdministrator LoginAdministrator?
  loginAdmId         Int                 @unique
  person             Person              @relation(fields: [adminId], references: [id])
  adminId            Int                 @unique
}

model Person {
  id            Int            @id @default(autoincrement())
  name          String         @default("")
  cpf           String         @unique @default("")
  born          DateTime       @default(now())
  administrator Administrator?
  adminId       Int            @unique
  user          User           @relation(fields: [userId], references: [id])
  userId        Int            @unique
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  enrollment  String    @unique
  dailyMeals  Int
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  person      Person?
  personId    Int       @unique
  student     Student   @relation(fields: [studentId], references: [id])
  studentId   Int       @unique
  visitors    Visitors  @relation(fields: [visitorId], references: [id])
  visitorId   Int       @unique
  employee    Employee  @relation(fields: [employeeId], references: [id])
  employeeId  Int       @unique
  loginUser   LoginUser @relation(fields: [loginUserId], references: [id])
  loginUserId Int       @unique
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  User      User[]
}

model Student {
  id         Int     @id @default(autoincrement())
  enrollment String  @unique
  Course     Course? @relation(fields: [courseId], references: [id])
  courseId   Int?
  user       User?
}

model Course {
  id      Int       @id @default(autoincrement())
  name    String    @unique
  Student Student[]
}

model Visitors {
  id   Int   @id @default(autoincrement())
  user User?
}

model Employee {
  id         Int    @id @default(autoincrement())
  enrollment String @unique
  user       User?
}

model LoginUser {
  id               Int       @id @default(autoincrement())
  email            String    @unique
  password         String
  emailRecovery    String
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  user             User?
}
